name: publish

on:
  release:
    types: [ created ]

jobs:
  build-generator:
    name: Build Generator (${{ matrix.target.os }})
    strategy:
      matrix:
        target:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            build-name: generator
            artifact-name: react-query-generator-bin-linux-x64
            packages: musl-tools
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            build-name: generator
            artifact-name: react-query-generator-bin-linux-arm64
            cross: true
          - target: x86_64-apple-darwin
            os: macos-latest
            build-name: generator
            artifact-name: react-query-generator-bin-macos-x64
          - target: aarch64-apple-darwin
            os: macos-latest
            build-name: generator
            artifact-name: react-query-generator-bin-macos-arm64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            build-name: generator.exe
            artifact-name: react-query-generator-bin-win-x64
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.61.0
          override: true
          target: ${{ matrix.target.target }}
      - uses: actions/setup-node@v2
        if: github.event_name == 'push'
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        if: github.event_name == 'push'
        run: yarn install --frozen-lockfile --ignore-scripts
      - name: Install packages
        if: matrix.target.os == 'ubuntu-latest' && matrix.target.packages
        run: sudo apt install ${{ matrix.target.packages }} -y
      - name: Install cross
        if: matrix.target.cross
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cross
      - name: Build project
        working-directory: generator
        run: ${{ matrix.target.cross && 'cross' || 'cargo' }} build --release --target ${{ matrix.target.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target.artifact-name }}
          path: generator/target/${{ matrix.target.target }}/release/${{ matrix.target.build-name }}

  publish:
    runs-on: ubuntu-latest
    needs: [ build-generator ]
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Download artifact react-query-generator-bin-linux-x64
        uses: actions/download-artifact@v2
        with:
          name: react-query-generator-bin-linux-x64
          path: linux-x64
      - name: Download artifact react-query-generator-bin-linux-arm64
        uses: actions/download-artifact@v2
        with:
          name: react-query-generator-bin-linux-arm64
          path: linux-arm64
      - name: Download artifact react-query-generator-bin-macos-x64
        uses: actions/download-artifact@v2
        with:
          name: react-query-generator-bin-macos-x64
          path: macos-x64
      - name: Download artifact react-query-generator-bin-macos-arm64
        uses: actions/download-artifact@v2
        with:
          name: react-query-generator-bin-macos-arm64
          path: macos-arm64
      - name: Download artifact react-query-generator-bin-win-x64
        uses: actions/download-artifact@v2
        with:
          name: react-query-generator-bin-win-x64
          path: win-x64
      - name: Mark binaries as executable
        run: |
          chmod +x linux-x64/generator
          chmod +x linux-arm64/generator
          chmod +x macos-x64/generator
          chmod +x macos-arm64/generator
      - name: Publish
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
